{"version":3,"sources":["components/Reviews/Reviews.module.css","components/Reviews/Reviews.js","services/moviesApi.js"],"names":["module","exports","Reviews","state","reviews","movieId","this","props","match","params","baseHttpService","fetchMovieReviews","then","results","setState","length","items","map","review","className","styles","listItem","title","author","content","id","list","noInfo","Component","baseURL","key","language","fetchPopularMovies","get","fetchMoviesWithQuery","searchQuery","page","fetchMovieDetails","fetchMovieCast","url","axios","res","data"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,0B,2HCIlDC,E,4MACJC,MAAQ,CACNC,QAAS,M,kEAGU,IAAD,OAEVC,EADUC,KAAKC,MAAfC,MACkBC,OAAlBJ,QACRK,IAAgBC,kBAAkBN,GAASO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACjD,EAAKC,SAAS,CAAEV,QAASS,S,+BAGnB,IACAT,EAAYE,KAAKH,MAAjBC,QACR,GAAKA,EAEE,CACL,GAAIA,EAAQW,OAAS,EAAG,CACtB,IAAMC,EAAQZ,EAAQa,KAAI,SAAAC,GACxB,OACE,qBAAIC,UAAWC,IAAOC,SAAtB,UACE,qBAAIF,UAAWC,IAAOE,MAAtB,qBAAsCJ,EAAOK,UAC7C,4BAAIL,EAAOM,YAFwBpB,EAAQqB,OAMjD,OAAO,oBAAIN,UAAWC,IAAOM,KAAtB,SAA6BV,IAEpC,OACE,mBAAGG,UAAWC,IAAOO,OAArB,sDAdJ,OAAO,cAAC,IAAD,Q,GAfSC,aAsCP1B,a,6DCTTQ,EAAkB,I,iDA/BtBmB,QAAU,gC,KACVC,IAAM,mC,KACNC,SAAW,Q,KACXC,mBAAqB,WACnB,OAAO,EAAKC,IAAL,qCAAuC,EAAKH,IAA5C,kB,KAETI,qBAAuB,SAACC,GAA2B,IAAdC,EAAa,uDAAN,EAC1C,OAAO,EAAKH,IAAL,+BACmB,EAAKH,IADxB,qBACwC,EAAKC,SAD7C,kBAC+DI,EAD/D,iBACmFC,EADnF,0B,KAITC,kBAAoB,SAAAZ,GAClB,OAAO,EAAKQ,IAAL,gBACIR,EADJ,oBACkB,EAAKK,IADvB,qBACuC,EAAKC,Y,KAGrDO,eAAiB,SAAAb,GACf,OAAO,EAAKQ,IAAL,gBACIR,EADJ,4BAC0B,EAAKK,IAD/B,qBAC+C,EAAKC,Y,KAG7DpB,kBAAoB,SAAAc,GAClB,OAAO,EAAKQ,IAAL,gBACIR,EADJ,4BAC0B,EAAKK,IAD/B,qBAC+C,EAAKC,Y,KAG7DE,IAAM,WAAe,IAAdM,EAAa,uDAAP,GACX,OAAOC,IAAMP,IAAN,UAAa,EAAKJ,SAAlB,OAA4BU,IAAO3B,MAAK,SAAA6B,GAAG,OAAIA,EAAIC,UAM/ChC","file":"static/js/8.1352bb5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Reviews_list__3zZXN\",\"noInfo\":\"Reviews_noInfo__QkiLA\"};","import React, { Component } from 'react';\nimport ImageLoader from '../Loader/Loader';\nimport baseHttpService from '../../services/moviesApi';\nimport styles from './Reviews.module.css';\n\nclass Reviews extends Component {\n  state = {\n    reviews: null,\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    baseHttpService.fetchMovieReviews(movieId).then(({ results }) => {\n      this.setState({ reviews: results });\n    });\n  }\n  render() {\n    const { reviews } = this.state;\n    if (!reviews) {\n      return <ImageLoader />;\n    } else {\n      if (reviews.length > 0) {\n        const items = reviews.map(review => {\n          return (\n            <li className={styles.listItem} key={reviews.id}>\n              <h3 className={styles.title}>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          );\n        });\n        return <ul className={styles.list}>{items}</ul>;\n      } else {\n        return (\n          <p className={styles.noInfo}>\n            We don't have any reviews for this movie\n          </p>\n        );\n      }\n    }\n  }\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nclass BaseHttpService {\n  baseURL = 'https://api.themoviedb.org/3/';\n  key = '0fbec3af711d354abab0c5985079bb8e';\n  language = 'en-US';\n  fetchPopularMovies = () => {\n    return this.get(`trending/movie/day?api_key=${this.key}&adult=false`);\n  };\n  fetchMoviesWithQuery = (searchQuery, page = 1) => {\n    return this.get(\n      `search/movie?api_key=${this.key}&language=${this.language}&query=${searchQuery}&page=${page}&include_adult=false`,\n    );\n  };\n  fetchMovieDetails = id => {\n    return this.get(\n      `movie/${id}?api_key=${this.key}&language=${this.language}`,\n    );\n  };\n  fetchMovieCast = id => {\n    return this.get(\n      `movie/${id}/credits?api_key=${this.key}&language=${this.language}`,\n    );\n  };\n  fetchMovieReviews = id => {\n    return this.get(\n      `movie/${id}/reviews?api_key=${this.key}&language=${this.language}`,\n    );\n  };\n  get = (url = '') => {\n    return axios.get(`${this.baseURL}${url}`).then(res => res.data);\n  };\n}\n\nconst baseHttpService = new BaseHttpService();\n\nexport default baseHttpService;\n"],"sourceRoot":""}