{"version":3,"sources":["components/Cast/Cast.module.css","components/Cast/Cast.js","services/moviesApi.js"],"names":["module","exports","Cast","state","cast","loading","movieId","this","props","match","params","setState","baseHttpService","fetchMovieCast","then","items","map","img","profile_path","className","styles","listItem","src","alt","name","title","character","id","list","Component","baseURL","key","language","fetchPopularMovies","get","fetchMoviesWithQuery","searchQuery","page","fetchMovieDetails","fetchMovieReviews","url","axios","res","data"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,uBAAuB,IAAM,kBAAkB,MAAQ,sB,2HCKxGC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,SAAS,G,kEAGU,IAAD,OAEVC,EADUC,KAAKC,MAAfC,MACkBC,OAAlBJ,QACRC,KAAKI,SAAS,CAAEN,SAAS,IACzBO,IAAgBC,eAAeP,GAASQ,MAAK,YAAe,IAAZV,EAAW,EAAXA,KAC9C,EAAKO,SAAS,CAAEP,OAAMC,SAAS,S,6CAKjCE,KAAKI,SAAS,CAAEN,SAAS,M,+BAEjB,IAAD,EACmBE,KAAKJ,MAAvBC,EADD,EACCA,KAAMC,EADP,EACOA,QACd,GAAID,EAAM,CACR,IAAMW,EAAQX,EAAKY,KAAI,SAAAZ,GACrB,IAAIa,EAKJ,OAHKA,EADLb,EAAKc,aACG,0CAAsCd,EAAKc,cAE7C,qEAEJ,qBAAIC,UAAWC,IAAOC,SAAtB,UACE,qBAAKC,IAAKL,EAAKM,IAAKnB,EAAKoB,KAAML,UAAWC,IAAOH,MACjD,oBAAIE,UAAWC,IAAOK,MAAtB,SAA8BrB,EAAKoB,OACnC,4CAAepB,EAAKsB,eAHetB,EAAKuB,OAO9C,OACE,qCACGtB,GAAW,cAAC,IAAD,IACZ,oBAAIc,UAAWC,IAAOQ,KAAtB,SAA6Bb,IAF/B,Y,GApCWc,aA4CJ3B,a,6DChBTU,EAAkB,I,iDA/BtBkB,QAAU,gC,KACVC,IAAM,mC,KACNC,SAAW,Q,KACXC,mBAAqB,WACnB,OAAO,EAAKC,IAAL,qCAAuC,EAAKH,IAA5C,kB,KAETI,qBAAuB,SAACC,GAA2B,IAAdC,EAAa,uDAAN,EAC1C,OAAO,EAAKH,IAAL,+BACmB,EAAKH,IADxB,qBACwC,EAAKC,SAD7C,kBAC+DI,EAD/D,iBACmFC,EADnF,0B,KAITC,kBAAoB,SAAAX,GAClB,OAAO,EAAKO,IAAL,gBACIP,EADJ,oBACkB,EAAKI,IADvB,qBACuC,EAAKC,Y,KAGrDnB,eAAiB,SAAAc,GACf,OAAO,EAAKO,IAAL,gBACIP,EADJ,4BAC0B,EAAKI,IAD/B,qBAC+C,EAAKC,Y,KAG7DO,kBAAoB,SAAAZ,GAClB,OAAO,EAAKO,IAAL,gBACIP,EADJ,4BAC0B,EAAKI,IAD/B,qBAC+C,EAAKC,Y,KAG7DE,IAAM,WAAe,IAAdM,EAAa,uDAAP,GACX,OAAOC,IAAMP,IAAN,UAAa,EAAKJ,SAAlB,OAA4BU,IAAO1B,MAAK,SAAA4B,GAAG,OAAIA,EAAIC,UAM/C/B","file":"static/js/7.31e56149.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Cast_list__Ogf_R\",\"listItem\":\"Cast_listItem__3_PZ-\",\"img\":\"Cast_img__1-Qw3\",\"title\":\"Cast_title__1vzXS\"};","import React, { Component } from 'react';\nimport ImageLoader from '../Loader/Loader';\n\nimport baseHttpService from '../../services/moviesApi';\nimport styles from './Cast.module.css';\n\nclass Cast extends Component {\n  state = {\n    cast: [],\n    loading: false,\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    this.setState({ loading: true });\n    baseHttpService.fetchMovieCast(movieId).then(({ cast }) => {\n      this.setState({ cast, loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({ loading: false });\n  }\n  render() {\n    const { cast, loading } = this.state;\n    if (cast) {\n      const items = cast.map(cast => {\n        let img;\n        cast.profile_path\n          ? (img = `https://image.tmdb.org/t/p/w300/${cast.profile_path}`)\n          : (img =\n              'https://rimatour.com/wp-content/uploads/2017/09/No-image-found.jpg');\n        return (\n          <li className={styles.listItem} key={cast.id}>\n            <img src={img} alt={cast.name} className={styles.img} />\n            <h3 className={styles.title}>{cast.name}</h3>\n            <p>Character: {cast.character}</p>\n          </li>\n        );\n      });\n      return (\n        <>\n          {loading && <ImageLoader />}\n          <ul className={styles.list}>{items}</ul>;\n        </>\n      );\n    }\n  }\n}\nexport default Cast;\n","import axios from 'axios';\n\nclass BaseHttpService {\n  baseURL = 'https://api.themoviedb.org/3/';\n  key = '0fbec3af711d354abab0c5985079bb8e';\n  language = 'en-US';\n  fetchPopularMovies = () => {\n    return this.get(`trending/movie/day?api_key=${this.key}&adult=false`);\n  };\n  fetchMoviesWithQuery = (searchQuery, page = 1) => {\n    return this.get(\n      `search/movie?api_key=${this.key}&language=${this.language}&query=${searchQuery}&page=${page}&include_adult=false`,\n    );\n  };\n  fetchMovieDetails = id => {\n    return this.get(\n      `movie/${id}?api_key=${this.key}&language=${this.language}`,\n    );\n  };\n  fetchMovieCast = id => {\n    return this.get(\n      `movie/${id}/credits?api_key=${this.key}&language=${this.language}`,\n    );\n  };\n  fetchMovieReviews = id => {\n    return this.get(\n      `movie/${id}/reviews?api_key=${this.key}&language=${this.language}`,\n    );\n  };\n  get = (url = '') => {\n    return axios.get(`${this.baseURL}${url}`).then(res => res.data);\n  };\n}\n\nconst baseHttpService = new BaseHttpService();\n\nexport default baseHttpService;\n"],"sourceRoot":""}